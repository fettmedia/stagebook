<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.fettmedia.stagebook</groupId>
    <artifactId>stagebook</artifactId>
    <packaging>war</packaging>
    <version>1.0</version>
    <name>stagebook</name>
    <properties>
        <aspectj.version>1.7.2</aspectj.version>
        <java.version>1.6</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <roo.version>1.2.4.RELEASE</roo.version>
        <slf4j.version>1.7.5</slf4j.version>
        <spring.version>3.2.3.RELEASE</spring.version>
	<vaadin.version>7.1.9</vaadin.version>
	<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
	<vaadin.springintegration.version>2.0.2</vaadin.springintegration.version>
    </properties>
    <repositories>
        <repository>
            <id>spring-maven-release</id>
            <name>Spring Maven Release Repository</name>
            <url>http://maven.springframework.org/release</url>
        </repository>
        <repository>
            <id>spring-maven-milestone</id>
            <name>Spring Maven Milestone Repository</name>
            <url>http://maven.springframework.org/milestone</url>
        </repository>
        <repository>
            <id>spring-roo-repository</id>
            <name>Spring Roo Repository</name>
            <url>http://spring-roo-repository.springsource.org/release</url>
        </repository>
        <repository>
            <id>EclipseLink Repo</id>
            <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
            <name>EclipseLink Repo</name>
        </repository>
        <repository>
	    <id>vaadin-addons</id>
	    <url>http://maven.vaadin.com/vaadin-addons</url>
	</repository>
	<repository>
	    <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
	    <releases>
		<enabled>false</enabled>
            </releases>
	    <snapshots>
		<enabled>true</enabled>
            </snapshots>
	</repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-maven-release</id>
            <name>Spring Maven Release Repository</name>
            <url>http://maven.springframework.org/release</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-maven-milestone</id>
            <name>Spring Maven Milestone Repository</name>
            <url>http://maven.springframework.org/milestone</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-roo-repository</id>
            <name>Spring Roo Repository</name>
            <url>http://spring-roo-repository.springsource.org/release</url>
        </pluginRepository>
        <pluginRepository>
	    <id>vaadin-snapshots</id>
	    <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
	    <releases>
		<enabled>false</enabled>
	    </releases>
	    <snapshots>
		<enabled>true</enabled>
	    </snapshots>
	</pluginRepository>
    </pluginRepositories>
    <dependencies>
        <!-- General dependencies for standard applications -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.flexjson</groupId>
            <artifactId>flexjson</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>
        <!-- ROO dependencies -->
        <dependency>
            <groupId>org.springframework.roo</groupId>
            <artifactId>org.springframework.roo.annotations</artifactId>
            <version>${roo.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
    <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.18</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.5.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.3.1.Final</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.5.6</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- }:> Vaadin dependencies -->
        <dependency>
	     <groupId>com.vaadin</groupId>
	     <artifactId>vaadin-server</artifactId>
	     <version>${vaadin.version}</version>
	</dependency>
	<dependency>
	     <groupId>com.vaadin</groupId>
	     <artifactId>vaadin-client-compiled</artifactId>
	     <version>${vaadin.version}</version>
	</dependency>
	<dependency>
	     <groupId>com.vaadin</groupId>
	     <artifactId>vaadin-client</artifactId>
	     <version>${vaadin.version}</version>
	     <scope>provided</scope>
	</dependency>
	<dependency>
	     <groupId>com.vaadin</groupId>
	     <artifactId>vaadin-push</artifactId>
             <version>${vaadin.version}</version>
	</dependency>
	<dependency>
	     <groupId>com.vaadin</groupId>
	     <artifactId>vaadin-themes</artifactId>
	     <version>${vaadin.version}</version>
	</dependency>
	
	<!--  Spring-Vaadin integration -->
	<dependency>
             <groupId>ru.xpoft.vaadin</groupId>
       	     <artifactId>spring-vaadin-integration</artifactId>
             <version>${vaadin.springintegration.version}</version>
    </dependency>
    <dependency>
    		 <groupId>org.springframework</groupId>
    		 <artifactId>spring-web</artifactId>
    		 <version>3.1.1.RELEASE</version>
    </dependency>
    <dependency>
             <groupId>org.json</groupId>
             <artifactId>json</artifactId>
             <version>20090211</version>
    </dependency>
    
    <!--  MBassador Eventbus -->
    <dependency>
        <groupId>net.engio</groupId>
        <artifactId>mbassador</artifactId>
        <version>1.1.9</version>
    </dependency>
	
    <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>1.2.0.RELEASE</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
			<failOnMissingWebXml>false</failOnMissingWebXml>
		</configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.4</version>
                <!-- NB: do not use 1.3 or 1.3.x due to MASPECTJ-90 issue  -->
                <dependencies>
                    <!-- NB: You must use Maven 2.0.9 or above or these are ignored (see MNG-2972) -->
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjrt</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outxml>true</outxml>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--
                      Aspects in src/main/java and src/main/aspects are added as default in the 
                      compile goal.
                      Aspects in src/test/java and src/test/aspects are added as default in the 
                      test-compile goal.
                      Aspects in src/main/java are added in the test-compile goal 
                      if weaveWithAspectsInMainSourceFolder is set to true
                    -->
                    <weaveWithAspectsInMainSourceFolder>false</weaveWithAspectsInMainSourceFolder>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <printSummary>false</printSummary>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <excludes>
                        <exclude>**/*_Roo_*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <!-- IDE -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.7</version>
                <!-- Note 2.8 does not work with AspectJ aspect path -->
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>false</downloadJavadocs>
                    <wtpversion>2.0</wtpversion>
                    <additionalBuildcommands>
                        <buildCommand>
                            <name>org.eclipse.ajdt.core.ajbuilder</name>
                            <arguments>
                                <aspectPath>org.springframework.aspects</aspectPath>
                            </arguments>
                        </buildCommand>
                        <buildCommand>
                            <name>org.springframework.ide.eclipse.core.springbuilder</name>
                        </buildCommand>
                    </additionalBuildcommands>
                    <additionalProjectnatures>
                        <projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
                        <projectnature>com.springsource.sts.roo.core.nature</projectnature>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <dependenciesAsLibraries>true</dependenciesAsLibraries>
                </configuration>
            </plugin>
	    <plugin>
		<groupId>com.vaadin</groupId>
		<artifactId>vaadin-maven-plugin</artifactId>
		<version>${vaadin.plugin.version}</version>
		<configuration>
			<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
			<!-- <runTarget>mobilemail</runTarget> -->
			<!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
			     way compatible with Vaadin eclipse plugin. -->
			<webappDirectory>${basedir}/src/main/resources/webapp/VAADIN/widgetsets</webappDirectory>
			<hostedWebapp>${basedir}/src/main/resources/webapp/VAADIN/widgetsets</hostedWebapp>
			<noServer>true</noServer>
			<!-- Remove draftCompile when project is ready -->
			<draftCompile>false</draftCompile>
			<compileReport>true</compileReport>
			<style>OBF</style>
			<strict>true</strict>
			<runTarget>http://localhost:8080/stagebook/</runTarget>
		</configuration>
		<executions>
			<execution>
				<configuration>
				<!-- if you don't specify any modules, the plugin will find them -->
				<!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
		                     </modules> -->
				</configuration>
				<goals>
					<goal>clean</goal>
					<goal>resources</goal>
					<goal>update-theme</goal>
					<goal>update-widgetset</goal>
					<goal>compile-theme</goal>
					<goal>compile</goal>
				</goals>
			</execution>
		</executions>
	    </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.1</version>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.4.v20120524</version>
                <!--  configuration>
                    <webApp>${basedir}/src/main/resources/META-INF</webApp>
                    <webAppConfig>
                        <contextPath>${project.name}</contextPath>   
                    </webAppConfig>
                </configuration -->
            </plugin>
        </plugins>
	<pluginManagement>
	<plugins>
	<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
		<plugin>
		  <groupId>org.eclipse.m2e</groupId>
		  <artifactId>lifecycle-mapping</artifactId>
		  <version>1.0.0</version>
		  <configuration>
		    <lifecycleMappingMetadata>
			<pluginExecutions>
			  <pluginExecution>
			    <pluginExecutionFilter>
			       <groupId>com.vaadin</groupId>
			       <artifactId>vaadin-maven-plugin</artifactId>
			       <versionRange>[7.1.9,)</versionRange>
			       <goals>
				  <goal>resources</goal>
				  <goal>update-widgetset</goal>
				  <goal>compile</goal>
				  <goal>update-theme</goal>
				  <goal>compile-theme</goal>
			      </goals>
			    </pluginExecutionFilter>
			    <action>
				<ignore/>
			    </action>
			</pluginExecution>
		      </pluginExecutions>
		    </lifecycleMappingMetadata>
		  </configuration>
		</plugin>
	</plugins>
	</pluginManagement>
    </build>
</project>
